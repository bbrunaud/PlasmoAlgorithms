GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


       
      Bilinear refinery model based on the example in
      Yang et al., AIChE J., 2016
      This model contains uncertain Sulphur and VR yields.
      Number of binary complicating variables: 
      Number of continuous complicating variables: 0
      Number of binary recourse variables: 0
      Number of continuous recourse variables: *s
      Number of bilinear terms: *s
      Number of complicating constraints: 
      Number of recourse constraints: 
       
  15   
  16  *--------------------------------
  17  *               SET DEFINITIONS
  18  *--------------------------------
  19   
  20  SETS
  21          c               "crudes"                                                                / 1*10 /
  22          w               "components"                                                    / 1*8 /
  23          Re_in   "reformer input"                                                / 1*2 /
  24          Re_out  "reformer output"                                               / 1*6 /
  25          Cr_in   "cracker input"                                                 / 1*2 /
  26          Cr_out  "cracker output"                                                / 1*6 /
  27          Cr_CGO  "cracker-CGO output"                                    / 1*3 /
  28          Cr_mode "cracker modes"                                                 / 1*2 /
  29          Iso_out "isomerisation output"                                  / 1*4 /
  30          Des_out "desulphurisation output"                               / 1*4 /
  31          PG98_in "PG98 input"                                                    / 1*6 /
  32          Burn    "burn streams"                                                  / 1*3 /
  33          JPF_in  "JPF input"                                                             / 1*3 /
  34          JPF_out "JPF output"                                                    / 1*2 /
  35          AGO_in  "AGO input"                                                             / 1*3 /
  36          p               "products"                                                              / 1*7 /
  37          LG_in   "LG input"                                                              / 1*5 /
  38          LG_out  "LG output"                                                             / 1*4 /
  39          LG_prop "LG properties"                                                 / 1*3 /
  40          h               "scenarios"                                                             / 1*400 /
  41  ;
  42   
  43  alias(w,w2);
  44   
  45  *-------------------------------------------
  46  *                       SET SOLUTION OPTIONS
  47  *-------------------------------------------
  48   
  49  OPTION LIMROW = 0;
  50  OPTION LIMCOL = 0;
  51  OPTION OPTCA  = 1E-09;
  52  OPTION OPTCR  = 1E-03;
  53  OPTION RESLIM = 1E+04;
  54  OPTION ITERLIM = 1E+09;
  55   
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  56  OPTION LP=CPLEX;
  57  OPTION NLP=SNOPT;
  58  OPTION MIP=CPLEX;
  59  *OPTION MINLP=antigone;
  60  OPTION MINLP=BARON;
  61   
  62  *---------------------------------------------
  63  *               DEFINE PROBLEM-SPECIFIC PARAMETERS
  64  *---------------------------------------------
  65   
  66  SCALARS
  67          Desulphurisation_capacity  / 125 /,
  68          CDU_capacity  / 700 /,
  69          Reformer95_lower  / 5 /,
  70          Reformer_capacity  / 65 /,
  71          Cracker_capacity  / 175 /,
  72          GranularityOfBarrels  / 5000 /,
  73          LG_sale  / 561.6 /,
  74          LN_sale  / 1003 /,
  75          HF_sale  / 637 /,
  76          ES95_sale  / 1194 /,
  77          PG98_sale  / 1231 /,
  78          JET_sale  / 923 /,
  79          AGO_sale  / 907 /,
  80          CGO_density  / 0.95 /,
  81          Mogas_viscosity  / 12.2 /,
  82          AGO_viscosity  / 11.65 /,
  83          Mogas_Sulphur  / 2.1 /,
  84          AGO_Sulphur  / 1.68 /,
  85          Desulphurisation_CGO_cost,
  86          Isomerisation_cost  / 6 /,
  87          Reformer95_cost  / 2.7 /,
  88          Reformer100_cost  / 3.2 /,
  89          Cracker_Mogas_cost  / 3.2 /,
  90          Cracker_AGO_cost  / 3 /,
  91          Barrel_lower_bound  / 100000 /,
  92          Barrel_upper_bound  / 1500000 /,
  93          Sulphur_spec  / 0.0015 /
  94  ;
  95   
  96  Desulphurisation_CGO_cost = ((Mogas_Sulphur*109.0909 + 365.4546)/1000)*(0.85/0.159)/CGO_density;
  97   
  98  TABLE Reformer_fraction(Re_in,Re_out)
  99                  1     2     3     4     5     6
 100          1       0.08  0.09  0.83  0     0.019 2.7
 101          2       0.09  0.12  0     0.79  0.026 3.2
 102  ;
 103   
 104  TABLE Cracker_fraction(Cr_in,Cr_out)
 105                  1     2     3     4     5     6
 106          1       0.015 0.053 0.436 0.446 0.007 3.2
 107          2       0.012 0.046 0.381 0.511 0.007 3.0
 108  ;
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 109   
 110  TABLE Desulphurisation_fraction(c,Des_out)
 111                  1     2     3     4
 112          1       0.98  0.02  0.02  0
 113          2       0.98  0.02  0.02  0
 114          3       0.98  0.02  0.02  0
 115          4       0.98  0.02  0.02  0
 116          5       0.98  0.02  0.02  0
 117          6       0.97  0.03  0.02  0
 118          7       0.97  0.03  0.02  0
 119          8       0.96  0.04  0.02  0
 120          9       0.98  0.02  0.02  0
 121          10      0.96  0.04  0.02  0
 122  ;
 123   
 124  TABLE JPF_fraction(JPF_in,JPF_out)
 125                  1     2
 126          1       0.05  0.035
 127          2       0.10  0.065
 128          3       0.85  0.900
 129  ;
 130   
 131  TABLE Crude_yield(c,w)
 132                  1      2      3      4      5      6      7      8
 133          1       0.0020 0.0091 0.0698 0.1598 0.1003 0.2876 0.2682 0.1032
 134          2       0.0020 0.0089 0.0480 0.0959 0.0796 0.2249 0.2735 0.2672
 135          3       0.0020 0.0080 0.0610 0.1206 0.0861 0.2414 0.2646 0.2163
 136          4       0.0040 0.0200 0.0851 0.1532 0.0947 0.2539 0.2535 0.1356
 137          5       0.0020 0.0115 0.0543 0.1026 0.0765 0.2286 0.2695 0.2550
 138          6       0.0010 0.0064 0.0246 0.0607 0.0518 0.1900 0.2932 0.3723
 139          7       0.0020 0.0155 0.0945 0.1661 0.1160 0.2656 0.2317 0.1086
 140          8       0.0029 0.0130 0.0652 0.1196 0.0838 0.2127 0.2408 0.2620
 141          9       0.0040 0.0157 0.0749 0.1267 0.0915 0.2353 0.2510 0.2009
 142          10      0.0040 0.0107 0.0604 0.1123 0.0784 0.2092 0.2491 0.2759
 143  ;
 144   
 145  TABLE LG_parameters(LG_prop,LG_in)
 146                  1     2     3     4     5
 147          1       4.30  4.28  4.36  4.21  4.22
 148          2       93.0  92.5  93.6  92.7  93.9
 149          3       90.0  89.6  90.9  89.0  90.2
 150  ;
 151   
 152  *-------------------------------------------------
 153  *               DEFINE PARAMETERS
 154  *-------------------------------------------------
 155   
 156  PARAMETERS
 157   
 158          Isomerisation_fraction(Iso_out)
 159          /       1       0.03
 160                  2       0.97
 161                  3       0.04
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 162                  4       6.0/,
 163   
 164          Desulphurisation_fraction2(Des_out)
 165          /       1       0.96
 166                  2       0.04
 167                  3       0.02
 168                  4       20.0/,
 169   
 170          Crude_density(c)
 171          /       1       0.8441
 172                  2       0.8910
 173                  3       0.8441
 174                  4       0.8369
 175                  5       0.8829
 176                  6       0.9315
 177                  7       0.8252
 178                  8       0.8745
 179                  9       0.8570
 180                  10      0.8817/,
 181   
 182          BarrelToKT(c),
 183   
 184          Sulphur_GO_nominal(c)
 185          /       1       0.157
 186                  2       0.293
 187                  3       0.162
 188                  4       0.200
 189                  5       0.263
 190                  6       0.694
 191                  7       0.767
 192                  8       1.550
 193                  9       0.326
 194                  10      1.090/,
 195   
 196          Sulphur_GO_stdev(c),
 197   
 198          VaccuumResidue_nominal(c),
 199   
 200          VaccuumResidue_stdev(c),
 201   
 202          Crude_price(c)
 203          /       1       115.0
 204                  2       107.5
 205                  3       109.7
 206                  4       110.7
 207                  5       108.4
 208                  6       101.6
 209                  7       114.3
 210                  8       101.3
 211                  9       109.4
 212                  10      104.09/,
 213   
 214          Demand_quantity(p)
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 215          /       1       5
 216                  2       0
 217                  3       0
 218                  4       100
 219                  5       100
 220                  6       0
 221                  7       0/,
 222   
 223          Density_PG98_input(PG98_in)
 224          /       1       0.58
 225                  2       0.665
 226                  3       0.65
 227                  4       0.77
 228                  5       0.80
 229                  6       0.75/,
 230   
 231          Density_products(p)
 232          /       1       0.79
 233                  2       0.76
 234                  3       0.75
 235                  4       0.87
 236                  5       0.98
 237                  6       0.54
 238                  7       0.65/,
 239   
 240          Product_VP(p)
 241          /       1       0.65
 242                  2       0.65
 243                  3       0
 244                  4       0
 245                  5       0
 246                  6       0
 247                  7       0/,
 248   
 249          Product_RON(p)
 250          /       1       105
 251                  2       100
 252                  3       0
 253                  4       0
 254                  5       0
 255                  6       0
 256                  7       0/,
 257   
 258          Product_MON(p)
 259          /       1       100
 260                  2       96
 261                  3       0
 262                  4       0
 263                  5       0
 264                  6       0
 265                  7       0/,
 266   
 267          Product_Sulphur(p)
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 268          /       1       0
 269                  2       0
 270                  3       0.001
 271                  4       0
 272                  5       0
 273                  6       0
 274                  7       0/,
 275   
 276          Import_upper(p)
 277          /       1       0
 278                  2       0
 279                  3       0
 280                  4       0
 281                  5       0
 282                  6       0
 283                  7       0/,
 284   
 285          RON(PG98_in)
 286          /       1       0
 287                  2       91
 288                  3       71
 289                  4       95
 290                  5       100
 291                  6       93/,
 292   
 293          MON(PG98_in)
 294          /       1       0
 295                  2       86
 296                  3       68
 297                  4       86
 298                  5       91
 299                  6       82/,
 300   
 301          VP(PG98_in)
 302          /       1       0
 303                  2       0.4
 304                  3       0.8
 305                  4       0.5
 306                  5       0.5
 307                  6       0.65/,
 308   
 309          HFO_density(c)
 310          /       1       0.9385
 311                  2       0.9682
 312                  3       0.9423
 313                  4       0.9433
 314                  5       0.9652
 315                  6       0.9727
 316                  7       0.9470
 317                  8       0.9799
 318                  9       0.9562
 319                  10      0.9685/,
 320   
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 321          GO_density(c)
 322          /       1       0.8506
 323                  2       0.8590
 324                  3       0.8413
 325                  4       0.8450
 326                  5       0.8573
 327                  6       0.8688
 328                  7       0.8404
 329                  8       0.8467
 330                  9       0.8477
 331                  10      0.8558/,
 332   
 333          Viscosity_HF1(c)
 334          /       1       32.5
 335                  2       69.6
 336                  3       38.2
 337                  4       42.7
 338                  5       86.5
 339                  6       75.5
 340                  7       42.3
 341                  8       45.0
 342                  9       53.5
 343                  10      55.2/,
 344   
 345          Viscosity_HF3(c)
 346          /       1       2.52
 347                  2       2.92
 348                  3       2.61
 349                  4       2.56
 350                  5       2.65
 351                  6       2.95
 352                  7       2.50
 353                  8       2.51
 354                  9       2.62
 355                  10      2.67/,
 356   
 357          Viscosity_products(p)
 358          /       4       31.5/,
 359   
 360          Sulphur_3(AGO_in)
 361          /       1       0.1/,
 362   
 363          Crude_lower_bound(c),
 364   
 365          Crude_upper_bound(c),
 366   
 367          Sulphur_2(c,h),
 368   
 369          Sulphur_GO_data(c,h),
 370   
 371          VaccuumResidue_data(c,h),
 372   
 373          Crude_yield_data(c,w,h),
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 374   
 375          Desulphurisation_cost(c,h),
 376   
 377          prob(h) "probability of each scenario"
 378  ;
 379   
 380  loop(c,
 381          BarrelToKT(c) = (GranularityOfBarrels/6.29)*(Crude_density(c)/1000);
 382          Sulphur_GO_stdev(c) = 0.1*Sulphur_GO_nominal(c);
 383          VaccuumResidue_nominal(c) = sum(w$(ord(w)=card(w)), Crude_yield(c,w));
 384          VaccuumResidue_stdev(c) = 0.1*VaccuumResidue_nominal(c);
 385  );
 386   
 387   
 388   
 389  *=========== Generate scenarios for the uncertain parameters =============
 390   
 391  $INCLUDE refinery1_data/400.gms
****                                $282
 392   
 393   
 394  *======================================================================
 395   
 396   
 397   
 398  loop(h,
 399          loop(c,
 400                  loop(w$(ord(w) < card(w)),
 401                          Crude_yield_data(c,w,h) = sum(w2$(ord(w2)=card(w2)), Crude_yield(c,w)/(1-Crude_yield(c,w2))*(1-VaccuumResidue_data(c,h)));
****                                                                                                                                           $141
 402                  );
 403                  Crude_yield_data(c,w2,h)$(ord(w2)=card(w2)) = VaccuumResidue_data(c,h);
 404          );
 405  );
 406   
 407  loop(c,
 408          loop(h,
 409                  Desulphurisation_cost(c,h) = ((Sulphur_GO_data(c,h)*109.0909 + 365.4546)/1000)*(0.85/0.159)/GO_density(c);
****                                                               $141
 410                  Sulphur_2(c,h) = Sulphur_GO_data(c,h)*0.005;
 411          );
 412  );
 413   
 414  loop(c,
 415          Crude_lower_bound(c) = (Barrel_lower_bound/GranularityOfBarrels)*BarrelToKT(c);
 416          Crude_upper_bound(c) = (Barrel_upper_bound/GranularityOfBarrels)*BarrelToKT(c);
 417  );
 418   
 419   
 420   
 421   
 422   
 423  *---------------------------------------------------------------
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                      09/20/18 23:52:45 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 424  *-------------    FULL SPACE PROBLEM DEFINITION   --------------
 425  *---------------------------------------------------------------
 426   
 427  BINARY VARIABLES
 428          pickCrude(c)
 429  ;
 430   
 431  POSITIVE VARIABLES
 432          crudeQuantity(c)
 433          flow_Reformer95(h)
 434          flow_Reformer100(h)
 435          flow_Cracker_Mogas(h)
 436          flow_Cracker_AGO(h)
 437          flow_Isomerisation(h)
 438          flow_Desulphurisation_CGO(h)
 439          flow_LG_producing(h)
 440          flow_LN_producing(h)
 441          flow_HF_2(h)
 442          volume_PG98(h)
 443          volume_ES95(h)
 444          volume_HF(h)
 445   
 446          blin_CDU_LG(LG_out,h)
 447          blin_Reformer95_LG(LG_out,h)
 448          blin_Reformer100_LG(LG_out,h)
 449          blin_Mogas_LG(LG_out,h)
 450          blin_AGO_LG(LG_out,h)
 451          blin_Cracker_Mogas(Cr_CGO,h)
 452          blin_Cracker_AGO(Cr_CGO,h)
 453   
 454          flow_Desulphurisation_1(c,h)
 455          flow_AGO_1(c,h)
 456          flow_AGO_2(c,h)
 457          flow_HF_1(c,h)
 458          flow_HF_3(c,h)
 459          flow_Burn(Burn,h)
 460          flow_PG98(PG98_in,h)
 461          flow_ES95(PG98_in,h)
 462          flow_AGO_3(AGO_in,h)
 463          flow_JPF(JPF_out,h)
 464          flow_Import(p,h)
 465          fraction_LG(LG_in,h)
 466          fraction_CGO(Cr_mode,h)
 467  ;
 468   
 469  VARIABLES
 470          objvar
 471  ;
 472   
 473  EQUATIONS
 474          Mass_balance1(h)
 475          Mass_balance2(h)
 476          Mass_balance3(h)
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 477          Mass_balance4(h)
 478          Mass_balance5(h)
 479          Mass_balance7(h)
 480          GO_balance(c,h)
 481          VR_balance(c,h)
 482          Desulphurisation_balance(c,h)
 483          Demand_constraint1(h)
 484          Demand_constraint2(h)
 485          Demand_constraint3(h)
 486          Demand_constraint4(h)
 487          Demand_constraint5(h)
 488          Demand_constraint6(h)
 489          Demand_constraint7(h)
 490   
 491          CDU_capacity_bound
 492          Crude_bound(c)
 493          Crude_selection(c)
 494          Desulphurisation_capacity_bound(h)
 495          Cracker_capacity_bound(h)
 496          Reformer_capacity_bound(h)
 497          Reformer95_balance(h)
 498          Reformer100_Balance(h)
 499          Isomerisation_balance(h)
 500          CN_balance(h)
 501          CGO_balance(h)
 502          Desulphurisation_CGO_balance(h)
 503          PG98_volume_def(h)
 504          ES95_volume_def(h)
 505          Butane95_constraint(h)
 506          Butane98_constraint(h)
 507          LG_split_balance(h)
 508          LG_balance(h)
 509          Reformer95_LG_balance(h)
 510          Reformer100_LG_balance(h)
 511          Cracker_Mogas_LG_balance(h)
 512          Cracker_AGO_LG_balance(h)
 513          pq_ES95_constraint(h)
 514          pq_PG98_constraint(h)
 515          pq_demand_constraint(h)
 516          pq_burn_constraint(h)
 517          VP_ES95_upper(h)
 518          VP_ES95_lower(h)
 519          VP_PG98_upper(h)
 520          VP_PG98_lower(h)
 521          RON_PG98(h)
 522          RON_ES95(h)
 523          Sensitivity_PG98(h)
 524          Sensitivity_ES95(h)
 525   
 526          blincon_CDU_LG1(h)
 527          blincon_CDU_LG2(h)
 528          blincon_CDU_LG3(h)
 529          blincon_CDU_LG4(h)
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 530   
 531          blincon_Reformer95_LG1(h)
 532          blincon_Reformer95_LG2(h)
 533          blincon_Reformer95_LG3(h)
 534          blincon_Reformer95_LG4(h)
 535   
 536          blincon_Reformer100_LG1(h)
 537          blincon_Reformer100_LG2(h)
 538          blincon_Reformer100_LG3(h)
 539          blincon_Reformer100_LG4(h)
 540   
 541          blincon_Mogas_LG1(h)
 542          blincon_Mogas_LG2(h)
 543          blincon_Mogas_LG3(h)
 544          blincon_Mogas_LG4(h)
 545   
 546          blincon_AGO_LG1(h)
 547          blincon_AGO_LG2(h)
 548          blincon_AGO_LG3(h)
 549          blincon_AGO_LG4(h)
 550   
 551          blincon_Cracker_Mogas1(h)
 552          blincon_Cracker_Mogas2(h)
 553          blincon_Cracker_Mogas3(h)
 554   
 555          blincon_Cracker_AGO1(h)
 556          blincon_Cracker_AGO2(h)
 557          blincon_Cracker_AGO3(h)
 558   
 559          pq_AGO_constraint(h)
 560          pq_HF_constraint(h)
 561          pq_Desulphurisation_constraint(h)
 562          CGO_split_balance(h)
 563          Cracker_Mogas_CGO_balance(h)
 564          Cracker_AGO_CGO_balance(h)
 565          HF_volume_def(h)
 566          AGO_sulphur_balance(h)
 567          HF_viscosity_upper(h)
 568          HF_viscosity_lower(h)
 569          Refinery_Fuel(h)
 570   
 571          objfn
 572  ;
 573   
 574  *-------------------------------------
 575  *               EQUATION DEFINITIONS
 576  *-------------------------------------
 577   
 578          CDU_capacity_bound ..   sum(c, crudeQuantity(c)) =l= CDU_capacity
 579  ;
 580   
 581          Crude_selection(c) .. crudeQuantity(c) =g= pickCrude(c)*Crude_lower_bound(c)
 582  ;
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 583   
 584          Crude_bound(c) ..       CrudeQuantity(c) =l= pickCrude(c)*Crude_upper_bound(c)
 585  ;
 586   
 587          Desulphurisation_capacity_bound(h) .. flow_Desulphurisation_CGO(h) + sum(c, flow_Desulphurisation_1(c,h)) =l= Desulphurisation_capacity
 588  ;
 589   
 590          Mass_balance1(h) .. Reformer_fraction('1','1')*flow_Reformer95(h) +
 591                                                  Reformer_fraction('2','1')*flow_Reformer100(h) +
 592                                                  Cracker_fraction('1','1')*flow_Cracker_Mogas(h) +
 593                                                  Cracker_fraction('2','1')*flow_Cracker_AGO(h) +
 594                                                  Isomerisation_fraction('1')*flow_Isomerisation(h) +
 595                                                  Desulphurisation_fraction2('2')*flow_Desulphurisation_CGO(h) -
 596                                                  flow_Burn('1',h) +
 597                                                  sum(c,
 598                                                          Crude_yield_data(c,'1',h)*crudeQuantity(c) +
 599                                                          Desulphurisation_fraction(c,'2')*flow_Desulphurisation_1(c,h)
 600                                                  ) =e= 0
 601  ;
 602   
 603          Mass_balance2(h) .. Reformer_fraction('1','2')*flow_Reformer95(h) +
 604                                                  Reformer_fraction('2','2')*flow_Reformer100(h) +
 605                                                  Cracker_fraction('1','2')*flow_Cracker_Mogas(h) +
 606                                                  Cracker_fraction('2','2')*flow_Cracker_AGO(h) -
 607                                                  flow_LG_producing(h) - flow_PG98('1',h) -
 608                                                  flow_ES95('1',h) - flow_Burn('2',h) +
 609                                                  sum(c,
 610                                                          Crude_yield_data(c,'2',h)*crudeQuantity(c)
 611                                                  ) =e= 0
 612  ;
 613   
 614          Mass_balance3(h) .. -flow_LN_producing(h) - flow_Burn('3',h) -
 615                                                  flow_PG98('3',h) - flow_ES95('3',h) -
 616                                                  flow_Isomerisation(h) - flow_JPF('1',h)*JPF_fraction('1','1') -
 617                                                  flow_JPF('2',h)*JPF_fraction('1','2') +
 618                                                  sum(c,
 619                                                          Crude_yield_data(c,'3',h)*crudeQuantity(c)
 620                                                  ) =e= 0
 621  ;
 622   
 623          Mass_balance4(h) .. -flow_JPF('1',h)*JPF_fraction('2','1') -
 624                                                  flow_JPF('2',h)*JPF_fraction('2','2') -
 625                                                  flow_Reformer95(h) - flow_Reformer100(h) +
 626                                                  sum(c,
 627                                                          Crude_yield_data(c,'4',h)*crudeQuantity(c)
 628                                                  ) =e= 0
 629  ;
 630   
 631          Mass_balance5(h) .. -flow_JPF('1',h)*JPF_fraction('3','1') -
 632                                                  flow_JPF('2',h)*JPF_fraction('3','2') -
 633                                                  flow_AGO_3('1',h) +
 634                                                  sum(c,
 635                                                          Crude_yield_data(c,'5',h)*crudeQuantity(c)
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 636                                                  ) =e= 0
 637  ;
 638   
 639          Mass_balance7(h) .. -flow_Cracker_Mogas(h) - flow_Cracker_AGO(h) +
 640                                                  sum(c,
 641                                                          Crude_yield_data(c,'7',h)*crudeQuantity(c)
 642                                                  ) =e= 0
 643  ;
 644   
 645          GO_balance(c,h) .. -flow_AGO_1(c,h) - flow_Desulphurisation_1(c,h) - flow_HF_3(c,h) +
 646                                                  Crude_yield_data(c,'6',h)*crudeQuantity(c) =e= 0
 647  ;
 648   
 649          VR_balance(c,h) ..      Crude_yield_data(c,'8',h)*crudeQuantity(c) =e= flow_HF_1(c,h)
 650  ;
 651   
 652          Desulphurisation_balance(c,h) .. Desulphurisation_fraction(c,'1')*flow_Desulphurisation_1(c,h) =e= flow_AGO_2(c,h)
 653  ;
 654   
 655          Reformer95_balance(h) ..        flow_Reformer95(h)*Reformer_fraction('1','3') +
 656                                                                  flow_Reformer100(h)*Reformer_fraction('2','3') =e=
 657                                                                  flow_PG98('4',h) + flow_ES95('4',h)
 658  ;
 659   
 660          Reformer100_balance(h) ..       flow_Reformer95(h)*Reformer_fraction('1','4') +
 661                                                                  flow_Reformer100(h)*Reformer_fraction('2','4') =e=
 662                                                                  flow_PG98('5',h) + flow_ES95('5',h)
 663  ;
 664   
 665          Isomerisation_balance(h) .. flow_Isomerisation(h)*Isomerisation_fraction('2') =e=
 666                                                                  flow_PG98('2',h) + flow_ES95('2',h)
 667  ;
 668   
 669          CN_balance(h) ..        flow_Cracker_Mogas(h)*Cracker_fraction('1','3') +
 670                                                  flow_Cracker_AGO(h)*Cracker_fraction('2','3') =e=
 671                                                  flow_PG98('6',h) + flow_ES95('6',h)
 672  ;
 673   
 674          CGO_balance(h) ..       flow_Cracker_Mogas(h)*Cracker_fraction('1','4') +
 675                                                  flow_Cracker_AGO(h)*Cracker_fraction('2','4') =e=
 676                                                  flow_Desulphurisation_CGO(h) + flow_HF_2(h) + flow_AGO_3('2',h)
 677  ;
 678   
 679          Desulphurisation_CGO_balance(h) .. Desulphurisation_fraction2('1')*flow_Desulphurisation_CGO(h) =e= flow_AGO_3('3',h)
 680  ;
 681   
 682          Demand_constraint1(h) .. flow_Import('1',h) + sum(PG98_in, flow_PG98(PG98_in,h)) =g= Demand_quantity('1')
 683  ;
 684   
 685          Demand_constraint2(h) .. flow_Import('2',h) + sum(PG98_in, flow_ES95(PG98_in,h)) =g= Demand_quantity('2')
 686  ;
 687   
 688          Demand_constraint3(h) .. flow_Import('3',h) + sum(JPF_out, flow_JPF(JPF_out,h)) =g= Demand_quantity('3')
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 689  ;
 690   
 691          Demand_constraint4(h) .. flow_Import('4',h) + sum(AGO_in, flow_AGO_3(AGO_in,h)) +
 692                                                                  sum(c, flow_AGO_1(c,h) + flow_AGO_2(c,h)) =g= Demand_quantity('4')
 693  ;
 694   
 695          Demand_constraint5(h) .. flow_Import('5',h) + flow_HF_2(h) +
 696                                                                  sum(c, flow_HF_1(c,h) + flow_HF_3(c,h)) =g= Demand_quantity('5')
 697  ;
 698   
 699          Demand_constraint6(h) .. flow_Import('6',h) + flow_LG_producing(h) =g= Demand_quantity('6')
 700  ;
 701   
 702          Demand_constraint7(h) .. flow_Import('7',h) + flow_LN_producing(h) =g= Demand_quantity('7')
 703  ;
 704   
 705          PG98_volume_def(h) ..   flow_Import('1',h)/Density_products('1') +
 706                                                          sum(PG98_in, flow_PG98(PG98_in,h)/Density_PG98_input(PG98_in)) =e= volume_PG98(h)
 707  ;
 708   
 709          ES95_volume_def(h) ..   flow_Import('2',h)/Density_products('2') +
 710                                                          sum(PG98_in, flow_ES95(PG98_in,h)/Density_PG98_input(PG98_in)) =e= volume_ES95(h)
 711  ;
 712   
 713          Butane95_constraint(h) ..       flow_ES95('1',h)/Density_PG98_input('1') +
 714                                                                  0.03*flow_Import('2',h)/Density_products('2') =l= 0.05*volume_ES95(h)
 715  ;
 716   
 717          Butane98_constraint(h) ..       flow_PG98('1',h)/Density_PG98_input('1') +
 718                                                                  0.03*flow_Import('1',h)/Density_products('2') =l= 0.05*volume_PG98(h)
 719  ;
 720   
 721          blincon_CDU_LG1(h) .. blin_CDU_LG('1',h) =e= fraction_LG('1',h)*flow_ES95('1',h)
 722  ;
 723   
 724          blincon_CDU_LG2(h) .. blin_CDU_LG('2',h) =e= fraction_LG('1',h)*flow_PG98('1',h)
 725  ;
 726   
 727          blincon_CDU_LG3(h) .. blin_CDU_LG('3',h) =e= fraction_LG('1',h)*flow_Burn('2',h)
 728  ;
 729   
 730          blincon_CDU_LG4(h) .. blin_CDU_LG('4',h) =e= fraction_LG('1',h)*flow_LG_producing(h)
 731  ;
 732   
 733          blincon_Reformer95_LG1(h) .. blin_Reformer95_LG('1',h) =e= fraction_LG('2',h)*flow_ES95('1',h)
 734  ;
 735   
 736          blincon_Reformer95_LG2(h) .. blin_Reformer95_LG('2',h) =e= fraction_LG('2',h)*flow_PG98('1',h)
 737  ;
 738   
 739          blincon_Reformer95_LG3(h) .. blin_Reformer95_LG('3',h) =e= fraction_LG('2',h)*flow_Burn('2',h)
 740  ;
 741   
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 742          blincon_Reformer95_LG4(h) .. blin_Reformer95_LG('4',h) =e= fraction_LG('2',h)*flow_LG_producing(h)
 743  ;
 744   
 745          blincon_Reformer100_LG1(h) .. blin_Reformer100_LG('1',h) =e= fraction_LG('3',h)*flow_ES95('1',h)
 746  ;
 747   
 748          blincon_Reformer100_LG2(h) .. blin_Reformer100_LG('2',h) =e= fraction_LG('3',h)*flow_PG98('1',h)
 749  ;
 750   
 751          blincon_Reformer100_LG3(h) .. blin_Reformer100_LG('3',h) =e= fraction_LG('3',h)*flow_Burn('2',h)
 752  ;
 753   
 754          blincon_Reformer100_LG4(h) .. blin_Reformer100_LG('4',h) =e= fraction_LG('3',h)*flow_LG_producing(h)
 755  ;
 756   
 757          blincon_Mogas_LG1(h) .. blin_Mogas_LG('1',h) =e= fraction_LG('4',h)*flow_ES95('1',h)
 758  ;
 759   
 760          blincon_Mogas_LG2(h) .. blin_Mogas_LG('2',h) =e= fraction_LG('4',h)*flow_PG98('1',h)
 761  ;
 762   
 763          blincon_Mogas_LG3(h) .. blin_Mogas_LG('3',h) =e= fraction_LG('4',h)*flow_Burn('2',h)
 764  ;
 765   
 766          blincon_Mogas_LG4(h) .. blin_Mogas_LG('4',h) =e= fraction_LG('4',h)*flow_LG_producing(h)
 767  ;
 768   
 769          blincon_AGO_LG1(h) .. blin_AGO_LG('1',h) =e= fraction_LG('5',h)*flow_ES95('1',h)
 770  ;
 771   
 772          blincon_AGO_LG2(h) .. blin_AGO_LG('2',h) =e= fraction_LG('5',h)*flow_PG98('1',h)
 773  ;
 774   
 775          blincon_AGO_LG3(h) .. blin_AGO_LG('3',h) =e= fraction_LG('5',h)*flow_Burn('2',h)
 776  ;
 777   
 778          blincon_AGO_LG4(h) .. blin_AGO_LG('4',h) =e= fraction_LG('5',h)*flow_LG_producing(h)
 779  ;
 780   
 781          LG_balance(h) ..        sum(LG_out, blin_CDU_LG(LG_out,h)) =e=
 782                                                  sum(c,
 783                                                          Crude_yield_data(c,'2',h)*crudeQuantity(c)
 784                                                  )
 785  ;
 786   
 787          Reformer95_LG_balance(h) .. flow_Reformer95(h)*Reformer_fraction('1','2') =e=
 788                                                                  sum(LG_out, blin_Reformer95_LG(LG_out,h))
 789  ;
 790   
 791          Reformer100_LG_balance(h) ..    flow_Reformer100(h)*Reformer_fraction('2','2') =e=
 792                                                                          sum(LG_out, blin_Reformer100_LG(LG_out,h))
 793  ;
 794   
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 795          Cracker_Mogas_LG_balance(h) ..  flow_Cracker_Mogas(h)*Cracker_fraction('1','2') =e=
 796                                                                          sum(LG_out, blin_Mogas_LG(LG_out,h))
 797  ;
 798   
 799          Cracker_AGO_LG_balance(h) ..    flow_Cracker_AGO(h)*Cracker_fraction('2','2') =e=
 800                                                                          sum(LG_out, blin_AGO_LG(LG_out,h))
 801  ;
 802   
 803          pq_ES95_constraint(h) ..        blin_CDU_LG('1',h) + blin_Reformer95_LG('1',h) +
 804                                                                  blin_Reformer100_LG('1',h) + blin_Mogas_LG('1',h) +
 805                                                                  blin_AGO_LG('1',h) =e= flow_ES95('1',h)
 806  ;
 807   
 808          pq_PG98_constraint(h) ..        blin_CDU_LG('2',h) + blin_Reformer95_LG('2',h) +
 809                                                                  blin_Reformer100_LG('2',h) + blin_Mogas_LG('2',h) +
 810                                                                  blin_AGO_LG('2',h) =e= flow_PG98('1',h)
 811  ;
 812   
 813          pq_burn_constraint(h) ..        blin_CDU_LG('3',h) + blin_Reformer95_LG('3',h) +
 814                                                                  blin_Reformer100_LG('3',h) + blin_Mogas_LG('3',h) +
 815                                                                  blin_AGO_LG('3',h) =e= flow_Burn('2',h)
 816  ;
 817   
 818          pq_demand_constraint(h) ..      blin_CDU_LG('4',h) + blin_Reformer95_LG('4',h) +
 819                                                                  blin_Reformer100_LG('4',h) + blin_Mogas_LG('4',h) +
 820                                                                  blin_AGO_LG('4',h) =e= flow_LG_producing(h)
 821  ;
 822   
 823          LG_split_balance(h) .. sum(LG_in, fraction_LG(LG_in,h)) =e= 1
 824  ;
 825   
 826          VP_ES95_lower(h) .. -0.45*volume_ES95(h) + flow_Import('2',h)*Product_VP('2')/Density_products('2') +
 827                                                  sum(PG98_in, VP(PG98_in)*flow_ES95(PG98_in,h)/Density_PG98_input(PG98_in)) +
 828                                                  LG_parameters('1','1')*blin_CDU_LG('1',h)/Density_PG98_input('1') +
 829                                                  LG_parameters('1','2')*blin_Reformer95_LG('1',h)/Density_PG98_input('1') +
 830                                                  LG_parameters('1','3')*blin_Reformer100_LG('1',h)/Density_PG98_input('1') +
 831                                                  LG_parameters('1','4')*blin_Mogas_LG('1',h)/Density_PG98_input('1') +
 832                                                  LG_parameters('1','5')*blin_AGO_LG('1',h)/Density_PG98_input('1') =g= 0
 833  ;
 834   
 835          VP_ES95_upper(h) .. -0.80*volume_ES95(h) + flow_Import('2',h)*Product_VP('2')/Density_products('2') +
 836                                                  sum(PG98_in, VP(PG98_in)*flow_ES95(PG98_in,h)/Density_PG98_input(PG98_in)) +
 837                                                  LG_parameters('1','1')*blin_CDU_LG('1',h)/Density_PG98_input('1') +
 838                                                  LG_parameters('1','2')*blin_Reformer95_LG('1',h)/Density_PG98_input('1') +
 839                                                  LG_parameters('1','3')*blin_Reformer100_LG('1',h)/Density_PG98_input('1') +
 840                                                  LG_parameters('1','4')*blin_Mogas_LG('1',h)/Density_PG98_input('1') +
 841                                                  LG_parameters('1','5')*blin_AGO_LG('1',h)/Density_PG98_input('1') =l= 0
 842  ;
 843   
 844          VP_PG98_lower(h) .. -0.50*volume_PG98(h) + flow_Import('1',h)*Product_VP('1')/Density_products('1') +
 845                                                  sum(PG98_in, VP(PG98_in)*flow_PG98(PG98_in,h)/Density_PG98_input(PG98_in)) +
 846                                                  LG_parameters('1','1')*blin_CDU_LG('2',h)/Density_PG98_input('1') +
 847                                                  LG_parameters('1','2')*blin_Reformer95_LG('2',h)/Density_PG98_input('1') +
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 848                                                  LG_parameters('1','3')*blin_Reformer100_LG('2',h)/Density_PG98_input('1') +
 849                                                  LG_parameters('1','4')*blin_Mogas_LG('2',h)/Density_PG98_input('1') +
 850                                                  LG_parameters('1','5')*blin_AGO_LG('2',h)/Density_PG98_input('1') =g= 0
 851  ;
 852   
 853          VP_PG98_upper(h) .. -0.86*volume_PG98(h) + flow_Import('1',h)*Product_VP('1')/Density_products('1') +
 854                                                  sum(PG98_in, VP(PG98_in)*flow_PG98(PG98_in,h)/Density_PG98_input(PG98_in)) +
 855                                                  LG_parameters('1','1')*blin_CDU_LG('2',h)/Density_PG98_input('1') +
 856                                                  LG_parameters('1','2')*blin_Reformer95_LG('2',h)/Density_PG98_input('1') +
 857                                                  LG_parameters('1','3')*blin_Reformer100_LG('2',h)/Density_PG98_input('1') +
 858                                                  LG_parameters('1','4')*blin_Mogas_LG('2',h)/Density_PG98_input('1') +
 859                                                  LG_parameters('1','5')*blin_AGO_LG('2',h)/Density_PG98_input('1') =l= 0
 860  ;
 861   
 862          RON_PG98(h) ..  -98*volume_PG98(h) + flow_Import('1',h)*Product_RON('1')/Density_products('1') +
 863                                          sum(PG98_in, RON(PG98_in)*flow_PG98(PG98_in,h)/Density_PG98_input(PG98_in)) +
 864                                          LG_parameters('2','1')*blin_CDU_LG('2',h)/Density_PG98_input('1') +
 865                                          LG_parameters('2','2')*blin_Reformer95_LG('2',h)/Density_PG98_input('1') +
 866                                          LG_parameters('2','3')*blin_Reformer100_LG('2',h)/Density_PG98_input('1') +
 867                                          LG_parameters('2','4')*blin_Mogas_LG('2',h)/Density_PG98_input('1') +
 868                                          LG_parameters('2','5')*blin_AGO_LG('2',h)/Density_PG98_input('1') =g= 0
 869  ;
 870   
 871          RON_ES95(h) ..  -95*volume_ES95(h) + flow_Import('2',h)*Product_RON('2')/Density_products('2') +
 872                                          sum(PG98_in, RON(PG98_in)*flow_ES95(PG98_in,h)/Density_PG98_input(PG98_in)) +
 873                                          LG_parameters('2','1')*blin_CDU_LG('1',h)/Density_PG98_input('1') +
 874                                          LG_parameters('2','2')*blin_Reformer95_LG('1',h)/Density_PG98_input('1') +
 875                                          LG_parameters('2','3')*blin_Reformer100_LG('1',h)/Density_PG98_input('1') +
 876                                          LG_parameters('2','4')*blin_Mogas_LG('1',h)/Density_PG98_input('1') +
 877                                          LG_parameters('2','5')*blin_AGO_LG('1',h)/Density_PG98_input('1') =g= 0
 878  ;
 879   
 880          Sensitivity_PG98(h) ..  -10*volume_PG98(h) + flow_Import('1',h)*(Product_RON('1') - Product_MON('1'))/Density_products('1') +
 881                                                          sum(PG98_in, (RON(PG98_in) - MON(PG98_in))*flow_PG98(PG98_in,h)/Density_PG98_input(PG98_in)) +
 882                                                          (LG_parameters('2','1') - LG_parameters('3','1'))*blin_CDU_LG('2',h)/Density_PG98_input('1') +
 883                                                          (LG_parameters('2','2') - LG_parameters('3','2'))*blin_Reformer95_LG('2',h)/Density_PG98_input('1') +
 884                                                          (LG_parameters('2','3') - LG_parameters('3','3'))*blin_Reformer100_LG('2',h)/Density_PG98_input('1') +
 885                                                          (LG_parameters('2','4') - LG_parameters('3','4'))*blin_Mogas_LG('2',h)/Density_PG98_input('1') +
 886                                                          (LG_parameters('2','5') - LG_parameters('3','5'))*blin_AGO_LG('2',h)/Density_PG98_input('1') =l= 0
 887  ;
 888   
 889          Sensitivity_ES95(h) ..  -10*volume_ES95(h) + flow_Import('2',h)*(Product_RON('2') - Product_MON('2'))/Density_products('2') +
 890                                                          sum(PG98_in, (RON(PG98_in) - MON(PG98_in))*flow_ES95(PG98_in,h)/Density_PG98_input(PG98_in)) +
 891                                                          (LG_parameters('2','1') - LG_parameters('3','1'))*blin_CDU_LG('1',h)/Density_PG98_input('1') +
 892                                                          (LG_parameters('2','2') - LG_parameters('3','2'))*blin_Reformer95_LG('1',h)/Density_PG98_input('1') +
 893                                                          (LG_parameters('2','3') - LG_parameters('3','3'))*blin_Reformer100_LG('1',h)/Density_PG98_input('1') +
 894                                                          (LG_parameters('2','4') - LG_parameters('3','4'))*blin_Mogas_LG('1',h)/Density_PG98_input('1') +
 895                                                          (LG_parameters('2','5') - LG_parameters('3','5'))*blin_AGO_LG('1',h)/Density_PG98_input('1') =l= 0
 896  ;
 897   
 898          blincon_Cracker_Mogas1(h) .. blin_Cracker_Mogas('1',h) =e= fraction_CGO('1',h)*flow_AGO_3('2',h)
 899  ;
 900   
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 901          blincon_Cracker_Mogas2(h) .. blin_Cracker_Mogas('2',h) =e= fraction_CGO('1',h)*flow_HF_2(h)
 902  ;
 903   
 904          blincon_Cracker_Mogas3(h) .. blin_Cracker_Mogas('3',h) =e= fraction_CGO('1',h)*flow_Desulphurisation_CGO(h)
 905  ;
 906   
 907          blincon_Cracker_AGO1(h) .. blin_Cracker_AGO('1',h) =e= fraction_CGO('2',h)*flow_AGO_3('2',h)
 908  ;
 909   
 910          blincon_Cracker_AGO2(h) .. blin_Cracker_AGO('2',h) =e= fraction_CGO('2',h)*flow_HF_2(h)
 911  ;
 912   
 913          blincon_Cracker_AGO3(h) .. blin_Cracker_AGO('3',h) =e= fraction_CGO('2',h)*flow_Desulphurisation_CGO(h)
 914  ;
 915   
 916          Cracker_Mogas_CGO_balance(h) .. blin_Cracker_Mogas('1',h) + blin_Cracker_Mogas('2',h) +
 917                                                                          blin_Cracker_Mogas('3',h) =e= flow_Cracker_Mogas(h)*Cracker_fraction('1','4')
 918  ;
 919   
 920          Cracker_AGO_CGO_balance(h) ..   blin_Cracker_AGO('1',h) + blin_Cracker_AGO('2',h) +
 921                                                                          blin_Cracker_AGO('3',h) =e= flow_Cracker_AGO(h)*Cracker_fraction('2','4')
 922  ;
 923   
 924          CGO_split_balance(h) .. sum(Cr_mode, fraction_CGO(Cr_mode,h)) =e= 1
 925  ;
 926   
 927          pq_AGO_constraint(h) .. blin_Cracker_Mogas('1',h) + blin_Cracker_AGO('1',h) =e= flow_AGO_3('2',h)
 928  ;
 929   
 930          pq_HF_constraint(h) .. blin_Cracker_Mogas('2',h) + blin_Cracker_AGO('2',h) =e= flow_HF_2(h)
 931  ;
 932   
 933          pq_Desulphurisation_constraint(h) .. blin_Cracker_Mogas('3',h) + blin_Cracker_AGO('3',h) =e= flow_Desulphurisation_CGO(h)
 934  ;
 935   
 936          HF_volume_def(h) .. -volume_HF(h) + flow_Import('5',h)/Density_products('5') +
 937                                                  flow_HF_2(h)/CGO_density +
 938                                                  sum(c, flow_HF_1(c,h)/HFO_density(c) + flow_HF_3(c,h)/GO_density(c)) =e= 0
 939  ;
 940   
 941          HF_viscosity_lower(h) ..        flow_Import('5',h)*Viscosity_products('5')/Density_products('5') +
 942                                                                  sum(c,
 943                                                                          flow_HF_1(c,h)*Viscosity_HF1(c)/HFO_density(c) +
 944                                                                          flow_HF_3(c,h)*Viscosity_HF3(c)/GO_density(c)
 945                                                                  ) +
 946                                                                  (blin_Cracker_Mogas('2',h)*Mogas_viscosity + blin_Cracker_AGO('2',h)*AGO_viscosity)/CGO_density -
 947                                                                  30*volume_HF(h) =g= 0
 948  ;
 949   
 950          HF_viscosity_upper(h) ..        flow_Import('5',h)*Viscosity_products('5')/Density_products('5') +
 951                                                                  sum(c,
 952                                                                          flow_HF_1(c,h)*Viscosity_HF1(c)/HFO_density(c) +
 953                                                                          flow_HF_3(c,h)*Viscosity_HF3(c)/GO_density(c)
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 954                                                                  ) +
 955                                                                  (blin_Cracker_Mogas('2',h)*Mogas_viscosity + blin_Cracker_AGO('2',h)*AGO_viscosity)/CGO_density -
 956                                                                  33*volume_HF(h) =l= 0
 957  ;
 958   
 959          AGO_sulphur_balance(h) ..       flow_Import('4',h)*Product_sulphur('4') - Sulphur_spec*flow_Import('4',h) +
 960                                                                  sum(c,
 961                                                                          (Sulphur_GO_data(c,h) - Sulphur_spec)*flow_AGO_1(c,h) +
 962                                                                          (Sulphur_2(c,h) - Sulphur_spec)*flow_AGO_2(c,h)
 963                                                                  ) +
 964                                                                  flow_AGO_3('1',h)*(Sulphur_3('1') - Sulphur_spec) +
 965                                                                  blin_Cracker_AGO('1',h)*(AGO_sulphur - Sulphur_spec) +
 966                                                                  blin_Cracker_Mogas('1',h)*(Mogas_sulphur - Sulphur_spec) +
 967                                                                  blin_Cracker_AGO('3',h)*AGO_sulphur*0.005 +
 968                                                                  blin_Cracker_Mogas('3',h)*Mogas_sulphur*0.005 -
 969                                                                  Sulphur_spec*flow_AGO_3('3',h) =l= 0
 970  ;
 971   
 972          Refinery_Fuel(h) .. 1.3*flow_Burn('1',h) + 1.2*flow_Burn('2',h) + 1.1*flow_Burn('3',h) -
 973                                                  flow_Reformer95(h)*Reformer_fraction('1','5') -
 974                                                  flow_Reformer100(h)*Reformer_fraction('2','5') -
 975                                                  flow_Cracker_Mogas(h)*Cracker_fraction('1','5') -
 976                                                  flow_Cracker_AGO(h)*Cracker_fraction('2','5') -
 977                                                  flow_Isomerisation(h)*Isomerisation_fraction('3') -
 978                                                  flow_Desulphurisation_CGO(h)*Desulphurisation_fraction2('3') - 15.2 -
 979                                                  sum(c,
 980                                                          0.018*crudeQuantity(c) +
 981                                                          flow_Desulphurisation_1(c,h)*Desulphurisation_fraction(c,'3')
 982                                                  ) =g= 0
 983  ;
 984   
 985          Cracker_capacity_bound(h) .. flow_Cracker_Mogas(h) + flow_Cracker_AGO(h) =l= Cracker_capacity
 986  ;
 987   
 988          Reformer_capacity_bound(h) .. flow_Reformer95(h) + flow_Reformer100(h) =l= Reformer_capacity
 989  ;
 990   
 991   
 992      objfn .. objvar =e= sum(h,prob(h)*(
 993                                                                  Cracker_Mogas_cost*flow_Cracker_Mogas(h) +
 994                                                                  Cracker_AGO_cost*flow_Cracker_AGO(h) +
 995                                                                  Reformer95_cost*flow_Reformer95(h) +
 996                                                                  Reformer100_cost*flow_Reformer100(h) +
 997                                                                  Isomerisation_cost*flow_Isomerisation(h) +
 998                                                                  Desulphurisation_CGO_cost*flow_Desulphurisation_CGO(h) -
 999                                                                  LG_sale*flow_LG_producing(h) -
1000                                                                  LN_sale*flow_LN_producing(h) -
1001                                                                  HF_sale*flow_HF_2(h) +
1002                                                                  sum(c,
1003                                                                          Desulphurisation_cost(c,h)*flow_Desulphurisation_1(c,h) -
1004                                                                          AGO_sale*flow_AGO_1(c,h) -
1005                                                                          AGO_sale*flow_AGO_2(c,h) -
1006                                                                          HF_sale*flow_HF_1(c,h) -
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1007                                                                          HF_sale*flow_HF_3(c,h) +
1008                                                                          (crudeQuantity(c)/1000/BarrelToKT(c)*GranularityOfBarrels)*(Crude_price(c)+1)
1009                                                                  ) -
1010                                                                  sum(PG98_in,
1011                                                                          PG98_sale*flow_PG98(PG98_in,h) +
1012                                                                          ES95_sale*flow_ES95(PG98_in,h)
1013                                                                  ) -
1014                                                                  sum(JPF_out,
1015                                                                          JET_sale*flow_JPF(JPF_out,h)
1016                                                                  ) -
1017                                                                  sum(AGO_in,
1018                                                                          AGO_sale*flow_AGO_3(AGO_in,h)
1019                                                                  )
1020                                                          ) );
1021   
1022   
1023  MODEL refinery1 /all/;
1024   
1025   
1026  *---------------------------------------------
1027  *                       SET VARIABLE BOUNDS
1028  *---------------------------------------------
1029   
1030  flow_Desulphurisation_1.up(c,h) = Desulphurisation_capacity;
1031  flow_AGO_1.up(c,h) = Crude_upper_bound(c);
1032  flow_AGO_2.up(c,h) = Desulphurisation_capacity;
1033  flow_HF_1.up(c,h) = Crude_upper_bound(c);
1034  flow_HF_3.up(c,h) = Crude_upper_bound(c);
1035  flow_PG98.up(PG98_in,h) = CDU_capacity;
1036  flow_ES95.up(PG98_in,h) = CDU_capacity;
1037  flow_Burn.up(Burn,h) = CDU_capacity;
1038  flow_AGO_3.up(AGO_in,h) = Cracker_capacity;
1039  flow_AGO_3.up('1',h) = CDU_capacity;
1040  flow_JPF.up(JPF_out,h) = CDU_capacity;
1041  flow_Import.up(p,h) = Import_upper(p);
1042  fraction_LG.up(LG_in,h) = 1;
1043  flow_Reformer95.lo(h) = Reformer95_lower;
1044  flow_Reformer95.up(h) = Reformer_capacity;
1045  flow_Reformer100.up(h) = Reformer_capacity - Reformer95_lower;
1046  flow_Cracker_Mogas.up(h) = Cracker_capacity;
1047  flow_Cracker_AGO.up(h) = Cracker_capacity;
1048  flow_Isomerisation.up(h) = CDU_capacity;
1049  flow_Desulphurisation_CGO.up(h) = Cracker_capacity;
1050  flow_LG_producing.up(h) = CDU_capacity;
1051  flow_LN_producing.up(h) = CDU_capacity;
1052  flow_HF_2.up(h) = Cracker_capacity;
1053  volume_PG98.up(h) = CDU_capacity/Density_PG98_input('1');
1054  volume_ES95.up(h) = CDU_capacity/Density_PG98_input('1');
1055  fraction_CGO.up(Cr_mode,h) = 1;
1056  volume_HF.up(h) = CDU_capacity/GO_density('7');
1057  blin_CDU_LG.up(LG_out,h) = CDU_capacity;
1058  blin_Reformer95_LG.up(LG_out,h) = CDU_capacity;
1059  blin_Reformer100_LG.up(LG_out,h) = CDU_capacity;
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1060  blin_Mogas_LG.up(LG_out,h) = CDU_capacity;
1061  blin_AGO_LG.up(LG_out,h) = CDU_capacity;
1062  blin_Cracker_Mogas.up(Cr_CGO,h) = Cracker_capacity;
1063  blin_Cracker_AGO.up(Cr_CGO,h) = Cracker_Capacity;
1064   
1065   
1066   
1067  *------------------------------------------
1068  *                       SOLVE THE PROBLEM
1069  *------------------------------------------
1070   
1071  solve refinery1 minimizing objvar using MINLP;
****                                               $257
1072   
1073   
1074  *---------------------------------------------------
1075  *                       PRINT FINAL SOLUTION STATISTICS
1076  *---------------------------------------------------
1077   
1078  SCALARS solver_time, wall_time;
1079   
1080  solver_time = refinery1.resusd;
1081  wall_time = refinery1.etsolve;
1082   
1083  display solver_time, wall_time;
1084   
GAMS 25.1.1  r66732 Released May 19, 2018 LEX-LEG x86 64bit/Linux                                                                                                                                                                     09/20/18 23:52:45 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Error Messages


141  Symbol declared but no values have been assigned. Check for missing
        data definition, assignment, data loading or implicit assignment
        via a solve statement.
        A wild shot: You may have spurious commas in the explanatory
        text of a declaration. Check symbol reference list.
257  Solve statement not checked because of previous errors
282  Unable to open include file

**** 4 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.014 SECONDS      3 MB  25.1.1 r66732 LEX-LEG


USER: Eval License Carnegie Mellon University        G180112/0001AS-GEN
      Dept. of Chemical Engineering                              DC9476
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/canl1/PlasmoAlgorithms/examples/refinery_model/continous/scaled_refinery_continous400.gms
Output     /home/canl1/PlasmoAlgorithms/examples/refinery_model/continous/scaled_refinery_continous400.lst

**** USER ERROR(S) ENCOUNTERED
